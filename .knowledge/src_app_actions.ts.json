{"is_source_file": true, "format": "TypeScript", "description": "This file contains server-side action functions for a web application, including functions for reading data files, schema validation, and orchestrating queries to an external API (OpenRouter) for chat-based interactions related to company data. It manages user input validation, file system interactions, and communication with an external AI service.", "external_files": ["zod", "fs", "path"], "external_methods": ["fs.promises.readdir", "fs.promises.readFile", "path.join"], "published": ["getResponse"], "classes": [], "methods": [{"name": "async function getCompanyFilenames(): Promise<string[]> { getCompanyFilenames", "description": "Asynchronously retrieves all .txt filenames from the 'data' directory within the current working directory.", "scope": "", "scopeKind": ""}, {"name": "async function getCompanyData(filename: string): Promise<string> { getCompanyData", "description": "Reads and returns the content of a specified file from the 'data' directory, with a basic check to prevent path traversal.", "scope": "", "scopeKind": ""}, {"name": "async function callOpenRouter(systemPrompt: string, userMessage: string, history: {role: string,/ callOpenRouter", "description": "Sends a chat completion request to an external API (OpenRouter) with a prompt, message, and conversation history, returning the assistant's reply.", "scope": "", "scopeKind": ""}, {"name": "export async function getResponse(input: { message: string, history: any[] }) { getResponse", "description": "Main exported function that processes user input, determines relevant data files, and composes prompts to generate appropriate chatbot responses based on document content or general conversation.", "scope": "", "scopeKind": ""}], "calls": ["callOpenRouter", "getCompanyFilenames", "getCompanyData"], "search-terms": ["Action functions", "getCompanyFilenames", "getCompanyData", "callOpenRouter", "getResponse", "server-side", "chat interaction", "external API", "file system access"], "state": 2, "file_id": 41, "knowledge_revision": 101, "git_revision": "205c715cf568c9bc2ad27e3099767a265ac7db49", "ctags": [{"_type": "tag", "name": "MessageSchema", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^const MessageSchema = z.object({$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "RequestSchema", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^const RequestSchema = z.object({$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "answerGenerationPrompt", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^        const answerGenerationPrompt = `You are a helpful AI assistant. Your primary goal is to /", "language": "TypeScript", "kind": "constant", "scope": "getResponse", "scopeKind": "function"}, {"_type": "tag", "name": "callOpenRouter", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^async function callOpenRouter(systemPrompt: string, userMessage: string, history: {role: string,/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "companyKnowledge", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^        const companyKnowledge = await getCompanyData(relevantFilename);$/", "language": "TypeScript", "kind": "constant", "scope": "getResponse", "scopeKind": "function"}, {"_type": "tag", "name": "dataDir", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^  const dataDir = path.join(process.cwd(), 'data');$/", "language": "TypeScript", "kind": "constant", "scope": "getCompanyData", "scopeKind": "function"}, {"_type": "tag", "name": "dataDir", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^  const dataDir = path.join(process.cwd(), 'data');$/", "language": "TypeScript", "kind": "constant", "scope": "getCompanyFilenames", "scopeKind": "function"}, {"_type": "tag", "name": "errorBody", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^        const errorBody = await response.text();$/", "language": "TypeScript", "kind": "constant", "scope": "callOpenRouter", "scopeKind": "function"}, {"_type": "tag", "name": "filePath", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^  const filePath = path.join(dataDir, filename);$/", "language": "TypeScript", "kind": "constant", "scope": "getCompanyData", "scopeKind": "function"}, {"_type": "tag", "name": "fileSelectionPrompt", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^    const fileSelectionPrompt = `You are an expert at routing user questions to the correct docu/", "language": "TypeScript", "kind": "constant", "scope": "getResponse", "scopeKind": "function"}, {"_type": "tag", "name": "filenames", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^    const filenames = await getCompanyFilenames();$/", "language": "TypeScript", "kind": "constant", "scope": "getResponse", "scopeKind": "function"}, {"_type": "tag", "name": "files", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^    const files = await fs.promises.readdir(dataDir);$/", "language": "TypeScript", "kind": "constant", "scope": "getCompanyFilenames", "scopeKind": "function"}, {"_type": "tag", "name": "generalPrompt", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^    const generalPrompt = `You are a helpful and friendly career assistant chatbot for students./", "language": "TypeScript", "kind": "constant", "scope": "getResponse", "scopeKind": "function"}, {"_type": "tag", "name": "getCompanyData", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^async function getCompanyData(filename: string): Promise<string> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getCompanyFilenames", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^async function getCompanyFilenames(): Promise<string[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getResponse", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^export async function getResponse(input: { message: string, history: any[] }) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "history", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^  const { message: userMessage, history } = validatedInput.data;$/", "language": "TypeScript", "kind": "constant", "scope": "getResponse", "scopeKind": "function"}, {"_type": "tag", "name": "jsonResponse", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^    const jsonResponse = await response.json();$/", "language": "TypeScript", "kind": "constant", "scope": "callOpenRouter", "scopeKind": "function"}, {"_type": "tag", "name": "mappedHistory", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^    const mappedHistory = history.map(h => ({$/", "language": "TypeScript", "kind": "constant", "scope": "callOpenRouter", "scopeKind": "function"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^  const { message: userMessage, history } = validatedInput.data;$/", "language": "TypeScript", "kind": "constant", "scope": "getResponse", "scopeKind": "function"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^    const response = await fetch(\"https:\\/\\/openrouter.ai\\/api\\/v1\\/chat\\/completions\", {$/", "language": "TypeScript", "kind": "constant", "scope": "callOpenRouter", "scopeKind": "function"}, {"_type": "tag", "name": "validatedInput", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/app/actions.ts", "pattern": "/^  const validatedInput = RequestSchema.safeParse(input);$/", "language": "TypeScript", "kind": "constant", "scope": "getResponse", "scopeKind": "function"}], "hash": "f9681a2f88bacdd7ad7628a77500d6d1", "format-version": 4, "code-base-name": "connecto-v1", "filename": "src/app/actions.ts", "revision_history": [{"101": "205c715cf568c9bc2ad27e3099767a265ac7db49"}]}