{"is_source_file": true, "format": "TypeScript", "description": "This file implements an in-memory rate limiting utility for Next.js applications, providing functions to track request counts per client IP and route, prune old data, and generate rate limit headers. It includes a sliding window mechanism with pruning and optional bucket capacity limiting, along with helper functions for IP extraction and header generation.", "external_files": [], "external_methods": [], "published": ["consume", "getClientIp", "buildRateLimitHeaders", "RateLimitOptions"], "classes": [], "methods": [{"name": "export function consume( consume", "description": "Records a request for a specific key, determines if it is allowed based on rate limit options, and returns limit information including remaining requests, reset time, etc.", "scope": "", "scopeKind": ""}, {"name": "export function getClientIp(headers: Headers): string { getClientIp", "description": "Attempts to extract the client's IP address from request headers in a conservative manner.", "scope": "", "scopeKind": ""}, {"name": "export function buildRateLimitHeaders(result: LimitResult): Record<string, string> { buildRateLimitHeaders", "description": "Generates standard rate-limiting headers based on the result of a consume call.", "scope": "", "scopeKind": ""}, {"name": "function pruneOldHits(record: StoreRecord, windowMs: number) { pruneOldHits", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["pruneOldHits", "Date.now"], "search-terms": ["rate limiter", "sliding window", "Next.js rate limiting", "client IP extraction", "in-memory rate store", "RateLimitOptions"], "state": 2, "file_id": 60, "knowledge_revision": 127, "git_revision": "", "ctags": [{"_type": "tag", "name": "LimitResult", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^type LimitResult = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "RateLimitOptions", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^export type RateLimitOptions = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "StoreRecord", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^type StoreRecord = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "allowed", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^  const allowed = count <= limit;$/", "language": "TypeScript", "kind": "constant", "scope": "consume", "scopeKind": "function"}, {"_type": "tag", "name": "bucketCap", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^  const { limit, windowMs, bucketCap = Math.max(options.limit * 5, 100) } = options;$/", "language": "TypeScript", "kind": "constant", "scope": "consume", "scopeKind": "function"}, {"_type": "tag", "name": "buildRateLimitHeaders", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^export function buildRateLimitHeaders(result: LimitResult): Record<string, string> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "consume", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^export function consume($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "count", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^  const count = record.hits.length;$/", "language": "TypeScript", "kind": "constant", "scope": "consume", "scopeKind": "function"}, {"_type": "tag", "name": "cutoff", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^  const cutoff = nowMs() - windowMs;$/", "language": "TypeScript", "kind": "constant", "scope": "pruneOldHits", "scopeKind": "function"}, {"_type": "tag", "name": "getClientIp", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^export function getClientIp(headers: Headers): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "ip", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^    const ip = xff.split(\",\")[0]?.trim();$/", "language": "TypeScript", "kind": "constant", "scope": "getClientIp", "scopeKind": "function"}, {"_type": "tag", "name": "limit", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^  const { limit, windowMs, bucketCap = Math.max(options.limit * 5, 100) } = options;$/", "language": "TypeScript", "kind": "constant", "scope": "consume", "scopeKind": "function"}, {"_type": "tag", "name": "memoryStore", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^const memoryStore: Map<string, StoreRecord> = new Map();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "nowMs", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^  const oldest = record.hits[0] ?? nowMs();$/", "language": "TypeScript", "kind": "constant", "scope": "consume", "scopeKind": "function"}, {"_type": "tag", "name": "nowMs", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^const nowMs = () => Date.now();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "oldest", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^  const oldest = record.hits[0] ?? nowMs();$/", "language": "TypeScript", "kind": "constant", "scope": "consume", "scopeKind": "function"}, {"_type": "tag", "name": "pruneOldHits", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^function pruneOldHits(record: StoreRecord, windowMs: number) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "realIp", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^  const realIp = headers.get(\"x-real-ip\");$/", "language": "TypeScript", "kind": "constant", "scope": "getClientIp", "scopeKind": "function"}, {"_type": "tag", "name": "remaining", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^  const remaining = Math.max(0, limit - (allowed ? count : limit));$/", "language": "TypeScript", "kind": "constant", "scope": "consume", "scopeKind": "function"}, {"_type": "tag", "name": "reset", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^  const reset = Math.ceil(resetMs \\/ 1000);$/", "language": "TypeScript", "kind": "constant", "scope": "consume", "scopeKind": "function"}, {"_type": "tag", "name": "resetMs", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^  const resetMs = Math.max(0, oldest + windowMs - nowMs());$/", "language": "TypeScript", "kind": "constant", "scope": "consume", "scopeKind": "function"}, {"_type": "tag", "name": "vcIp", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^  const vcIp = headers.get(\"x-vercel-forwarded-for\");$/", "language": "TypeScript", "kind": "constant", "scope": "getClientIp", "scopeKind": "function"}, {"_type": "tag", "name": "windowMs", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^  const { limit, windowMs, bucketCap = Math.max(options.limit * 5, 100) } = options;$/", "language": "TypeScript", "kind": "constant", "scope": "consume", "scopeKind": "function"}, {"_type": "tag", "name": "xff", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/rateLimit.ts", "pattern": "/^  const xff = headers.get(\"x-forwarded-for\");$/", "language": "TypeScript", "kind": "constant", "scope": "getClientIp", "scopeKind": "function"}], "hash": "c16aac5a4e8b06ac23d26b87bda2d5ce", "format-version": 4, "code-base-name": "connecto-v1", "filename": "src/lib/rateLimit.ts", "revision_history": [{"127": ""}]}