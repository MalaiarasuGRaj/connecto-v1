{"is_source_file": true, "format": "TypeScript", "description": "This file defines a repository interface and an in-memory implementation for managing user sessions and message histories in a chat application backend. It includes type definitions for session data, methods for creating, retrieving, updating, listing, and deleting sessions, and a flexible architecture to swap in persistent storage providers.", "external_files": [], "external_methods": ["crypto.randomUUID"], "published": ["MessageRole", "Message", "Session", "CreateSessionInput", "AppendMessageInput", "SessionRepository", "getRepository"], "classes": [{"name": "InMemorySessionRepository", "description": "An in-memory implementation of the SessionRepository interface for development and testing purposes, storing sessions in a JavaScript Map."}], "methods": [{"name": "createSession(input?: CreateSessionInput): Promise<Session>; createSession", "description": "Creates a new chat session with optional initial messages, assigns a unique ID, and sets timestamps.", "scope": "SessionRepository", "scopeKind": "interface"}, {"name": "getSession(id: string): Promise<Session | null>; getSession", "description": "Retrieves a session by its ID, returning null if not found.", "scope": "SessionRepository", "scopeKind": "interface"}, {"name": "appendMessage(input: AppendMessageInput): Promise<Session | null>; appendMessage", "description": "Adds a message to an existing session, updating the session's updatedAt timestamp.", "scope": "SessionRepository", "scopeKind": "interface"}, {"name": "listSessions(limit?: number, offset?: number): Promise<Session[]>; listSessions", "description": "Returns a list of sessions with optional limit and offset for pagination, sorted by most recent update.", "scope": "SessionRepository", "scopeKind": "interface"}, {"name": "deleteSession(id: string): Promise<boolean>; deleteSession", "description": "Deletes a session by its ID, returning true if successful.", "scope": "SessionRepository", "scopeKind": "interface"}, {"name": "clearAll(): Promise<void>; clearAll", "description": "Removes all stored sessions and messages, mainly for development or testing.", "scope": "SessionRepository", "scopeKind": "interface"}, {"name": "function generateId(prefix = \"\"): string { generateId", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export function getRepository(): SessionRepository { getRepository", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["generateId", "crypto.randomUUID"], "search-terms": ["SessionRepository", "InMemorySessionRepository", "createSession", "appendMessage", "storage abstraction", "session management", "message history"], "state": 2, "file_id": 67, "knowledge_revision": 155, "git_revision": "767947bbd001463d5924564bdf31b8e217779c25", "ctags": [{"_type": "tag", "name": "AppendMessageInput", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^export interface AppendMessageInput {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "CreateSessionInput", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^export interface CreateSessionInput {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "InMemorySessionRepository", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^class InMemorySessionRepository implements SessionRepository {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "Message", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^export interface Message {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "MessageRole", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^export type MessageRole = \"user\" | \"assistant\" | \"system\";$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "Session", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^export interface Session {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "SessionRepository", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^export interface SessionRepository {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "all", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^    const all = Array.from(this.sessions.values()).sort($/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "appendMessage", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  appendMessage(input: AppendMessageInput): Promise<Session | null>;$/", "language": "TypeScript", "kind": "method", "scope": "SessionRepository", "scopeKind": "interface"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  const base =$/", "language": "TypeScript", "kind": "constant", "scope": "generateId", "scopeKind": "function"}, {"_type": "tag", "name": "clearAll", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  clearAll(): Promise<void>;$/", "language": "TypeScript", "kind": "method", "scope": "SessionRepository", "scopeKind": "interface"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  content: string;$/", "language": "TypeScript", "kind": "property", "scope": "AppendMessageInput", "scopeKind": "interface"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  content: string;$/", "language": "TypeScript", "kind": "property", "scope": "Message", "scopeKind": "interface"}, {"_type": "tag", "name": "createSession", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  createSession(input?: CreateSessionInput): Promise<Session>;$/", "language": "TypeScript", "kind": "method", "scope": "SessionRepository", "scopeKind": "interface"}, {"_type": "tag", "name": "createdAt", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^      createdAt: now,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "createdAt", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  createdAt: string; \\/\\/ ISO timestamp$/", "language": "TypeScript", "kind": "property", "scope": "Message", "scopeKind": "interface"}, {"_type": "tag", "name": "createdAt", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  createdAt: string; \\/\\/ ISO timestamp$/", "language": "TypeScript", "kind": "property", "scope": "Session", "scopeKind": "interface"}, {"_type": "tag", "name": "deleteSession", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  deleteSession(id: string): Promise<boolean>;$/", "language": "TypeScript", "kind": "method", "scope": "SessionRepository", "scopeKind": "interface"}, {"_type": "tag", "name": "generateId", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^function generateId(prefix = \"\"): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getRepository", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^export function getRepository(): SessionRepository {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getSession", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  getSession(id: string): Promise<Session | null>;$/", "language": "TypeScript", "kind": "method", "scope": "SessionRepository", "scopeKind": "interface"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^    const id = generateId(\"sess_\");$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  id: string;$/", "language": "TypeScript", "kind": "property", "scope": "Message", "scopeKind": "interface"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  id: string;$/", "language": "TypeScript", "kind": "property", "scope": "Session", "scopeKind": "interface"}, {"_type": "tag", "name": "inMemorySingleton", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^const inMemorySingleton = new InMemorySessionRepository();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "initialMessages", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^    const initialMessages: Message[] =$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "initialMessages", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  initialMessages?: Omit<Message, \"id\" | \"createdAt\">[];$/", "language": "TypeScript", "kind": "property", "scope": "CreateSessionInput", "scopeKind": "interface"}, {"_type": "tag", "name": "listSessions", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  listSessions(limit?: number, offset?: number): Promise<Session[]>;$/", "language": "TypeScript", "kind": "method", "scope": "SessionRepository", "scopeKind": "interface"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^    const message: Message = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "messages", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^      messages: initialMessages,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "messages", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  messages: Message[];$/", "language": "TypeScript", "kind": "property", "scope": "Session", "scopeKind": "interface"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^    const now = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "role", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  role: MessageRole;$/", "language": "TypeScript", "kind": "property", "scope": "AppendMessageInput", "scopeKind": "interface"}, {"_type": "tag", "name": "role", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  role: MessageRole;$/", "language": "TypeScript", "kind": "property", "scope": "Message", "scopeKind": "interface"}, {"_type": "tag", "name": "session", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^    const session = this.sessions.get(input.sessionId);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "session", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^    const session: Session = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "sessionId", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  sessionId: string;$/", "language": "TypeScript", "kind": "property", "scope": "AppendMessageInput", "scopeKind": "interface"}, {"_type": "tag", "name": "sessions", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  private sessions: Map<string, Session> = new Map();$/", "language": "TypeScript", "kind": "property", "scope": "InMemorySessionRepository", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^      title: input?.title,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  title?: string;$/", "language": "TypeScript", "kind": "property", "scope": "CreateSessionInput", "scopeKind": "interface"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  title?: string;$/", "language": "TypeScript", "kind": "property", "scope": "Session", "scopeKind": "interface"}, {"_type": "tag", "name": "updatedAt", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^      updatedAt: now,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "updatedAt", "path": "/home/kavia/workspace/code-generation/connecto-v1/src/lib/db/index.ts", "pattern": "/^  updatedAt: string; \\/\\/ ISO timestamp$/", "language": "TypeScript", "kind": "property", "scope": "Session", "scopeKind": "interface"}], "hash": "6e5d25a2a57982c44ef87d7d1cdca358", "format-version": 4, "code-base-name": "connecto-v1", "filename": "src/lib/db/index.ts", "fields": [{"name": "export interface AppendMessageInput {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export interface CreateSessionInput {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export interface Message {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export interface Session {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export interface SessionRepository {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "content: string;", "scope": "AppendMessageInput", "scopeKind": "interface", "description": "unavailable"}, {"name": "createdAt: string; \\/\\/ ISO timestamp", "scope": "Message", "scopeKind": "interface", "description": "unavailable"}, {"name": "id: string;", "scope": "Message", "scopeKind": "interface", "description": "unavailable"}, {"name": "initialMessages?: Omit<Message, \"id\" | \"createdAt\">[];", "scope": "CreateSessionInput", "scopeKind": "interface", "description": "unavailable"}, {"name": "messages: Message[];", "scope": "Session", "scopeKind": "interface", "description": "unavailable"}, {"name": "role: MessageRole;", "scope": "AppendMessageInput", "scopeKind": "interface", "description": "unavailable"}, {"name": "sessionId: string;", "scope": "AppendMessageInput", "scopeKind": "interface", "description": "unavailable"}, {"name": "private sessions: Map<string, Session> = new Map();", "scope": "InMemorySessionRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "title?: string;", "scope": "CreateSessionInput", "scopeKind": "interface", "description": "unavailable"}, {"name": "updatedAt: string; \\/\\/ ISO timestamp", "scope": "Session", "scopeKind": "interface", "description": "unavailable"}], "revision_history": [{"155": "767947bbd001463d5924564bdf31b8e217779c25"}]}